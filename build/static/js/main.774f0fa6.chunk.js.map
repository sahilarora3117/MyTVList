{"version":3,"sources":["Components/Show/Favicon/Favicon.js","Components/Show/Show.js","Components/Top/Top.js","Components/Home/Fav/Fav.js","Components/Home/Home.js","Components/ShowInfo/Info/Added/Added.js","Components/Episode/Watched/Watched.js","Components/Episode/Episode.js","Components/ShowInfo/Info/Info.js","Components/ShowInfo/ShowInfo.js","Components/Search/Search.js","Components/Result/Result.js","Components/Popular/Popular.js","Components/Anticipated/Anticipated.js","Components/List/List.js","Components/Genre/Genre.js","Components/Settings/RemoveData/Remove.js","Components/Settings/Settings.js","Components/Landing/Landing.js","Components/Episode/EpisodeInfo/WatchedButton/Watched.js","Components/Episode/EpisodeInfo/EpisodeInfo.js","Components/Upcoming/UpcomingEpisode/UpcomingImage.js","Components/Upcoming/UpcomingEpisode/UpcomingEpisode.js","Components/Upcoming/Upcoming.js","Components/Navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["FavIcon","props","useState","includes","setincludes","check","JSON","parse","localStorage","getItem","id","console","log","Popup","trigger","Icon","name","color","fitted","onClick","myfav","storedFav","array","value","i","length","copy","splice","arrayRemove","setItem","stringify","content","inverted","push","Show","image","setImage","useEffect","address","tvdbid","Axios","get","then","response","data","catch","error","finally","to","traktid","Header","as","floated","title","className","key","Card","Image","size","src","alt","Top","setData","Container","style","marginTop","marginBottom","Loader","active","inline","Grid","doubling","columns","container","map","show","Column","ids","trakt","tvdb","year","Fav","Placeholder","Home","fav","Added","Button","Watched","epid","icon","circular","Episode","List","divided","verticalAlign","episodes","episode","Item","season","number","Content","youtube_parser","url","match","Info","network","status","width","fluid","bordered","overview","href","homepage","certification","country","toUpperCase","Flag","language","genres","gen","marginRight","charAt","slice","Embed","trailer","placeholder","source","Accordion","backgroundColor","border","index","Toggle","eventKey","Collapse","Body","Comment","Group","threaded","comments","comment","Avatar","Author","user","username","Text","Actions","ShowInfo","location","useLocation","path","pathname","substring","lastIndexOf","setEpisode","setComments","searchbar","state","handleChange","bind","event","this","setState","target","Form","onSubmit","handleSubmit","widths","Input","type","onChange","encodeURI","React","Component","Result","Popular","genre","slug","Genre","textTransform","ModalExampleBasic","open","setOpen","Modal","basic","onClose","onOpen","centered","removeItem","settings","Segment","stackable","textAlign","Divider","vertical","Row","primary","exportdata","favourites","watchlist","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","fileName","fileToSave","Blob","saveAs","createBackup","fileTypes","base64","handleFiles","files","split","codata","atob","parsed","Landing","WatchedEp","EpisodeInfo","parray","window","Statistic","Value","rating","Label","votes","runtime","UpcomingImage","UpcomingEpisode","datanext","setDataNext","first_aired","App","Navbar","collapseOnSelect","expand","Brand","aria-controls","Nav","Link","compact","exact","component","TopView","SearchView","PopularView","AntiView","ListView","GenreView","ResultPage","SettingsPage","RelevantHome","EpisodePage","UpcomingPage","NoMatchPage","Anticipated","Settings","Upcoming","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.774f0fa6.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport {Icon, Popup} from 'semantic-ui-react'\n\nconst FavIcon = (props) => {\n    const [includes, setincludes] = useState();\n    function check () {\n        if (JSON.parse(localStorage.getItem(\"myfav\")).includes(props.id) === true){\n            console.log(JSON.parse(localStorage.getItem(\"myfav\")));\n            setincludes(true);\n            console.log(\"true called\");\n        }\n        else {\n            setincludes(false);\n            console.log(JSON.parse(localStorage.getItem(\"myfav\")));\n            console.log(\"false called\");\n        }\n    }\n    function arrayRemove(array, value) {\n        for(let i=0; i<array.length; ++i) {\n            if(array[i] === value) {\n                let copy = [...array];\n                copy.splice(i, 1);\n                return copy;\n            }\n        }\n        return array;\n    }\n    function addtofav () {\n        try{\n            var myfav = localStorage.getItem(\"myfav\");\n            var storedFav  = JSON.parse(myfav);\n            storedFav.push(props.id);\n            localStorage.setItem(\"myfav\", JSON.stringify(storedFav));\n            console.log(localStorage.getItem(\"myfav\"))\n            check();\n          }\n          catch {\n            console.log(\"error updating\")\n          }\n    }\n\n    function removefromfav () {\n        var myfav = localStorage.getItem(\"myfav\");\n      var storedFav  = JSON.parse(myfav);\n      storedFav = arrayRemove(storedFav, props.id);\n      localStorage.setItem(\"myfav\", JSON.stringify(storedFav));\n      check();\n    }\n    if (includes === true || JSON.parse(localStorage.getItem(\"myfav\")).includes(props.id) === true ){\n        return (\n            <Popup \n            trigger={<Icon name=\"favorite\" color='red' fitted onClick={removefromfav}></Icon>}\n            content=\"Remove From Favorites\"\n            inverted\n            />\n\n        )\n    }\n    else {\n        return (\n            <Popup \n            trigger={<Icon name=\"favorite\" color=\"blue\" fitted onClick={addtofav}></Icon> }\n            content=\"Add to Favorites\"\n            inverted\n            />\n            \n        )\n    }\n    \n}\n\nexport default FavIcon;","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport { Card, Image, Header} from 'semantic-ui-react'\nimport FavIcon from './Favicon/Favicon.js';\nimport {Link} from 'react-router-dom';\nconst Show = (props) => {\n    const [image, setImage] = useState([]);  \n    useEffect(() => {\n      var address = \"https://mytvlistbackend.herokuapp.com/seriesimage/\" + props.tvdbid;  \n      Axios.get(address)\n      .then(function (response) {\n          setImage (response.data);\n          \n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n    }, [props.tvdbid]);\n    return (\n      \n      \n      <div>\n        <Link to={\"/show/\" + props.traktid}>\n                  <Header color=\"yellow\" as='h5' floated=\"left\">{props.title}</Header>\n        </Link>\n        <Header className=\"heading\" floated=\"right\" as=\"h5\"><FavIcon key={props.traktid} id = {props.traktid}/></Header>\n        <Link to={\"/show/\" + props.traktid}>\n        <Card>\n          <Image size=\"medium\" src={image} alt={props.title}/>\n        </Card>\n        </Link>\n        </div>\n        )\n\n    \n      \n}\n\nexport default Show;","import React, {useState, useEffect} from 'react'\nimport Show from '../Show/Show';\nimport Axios from 'axios';\nimport {Grid, Loader, Header, Container} from 'semantic-ui-react'\nconst Top = () => {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n      Axios.get('https://mytvlistbackend.herokuapp.com/trending')\n      .then(function (response) {\n        console.log(response.data)\n        setData(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n      }, []);\n  \n      if (data.length === 0) {\n        return (\n          <Container>\n          <Header as=\"h2\" inverted style={{marginTop:\"1em\", marginBottom:\"1em\"}} color=\"purple\">Trending</Header>\n          <Loader active inline='centered' >Loading</Loader>\n          </Container>\n          \n          \n          );\n      }\n      return (\n        <div>\n          <Container>\n          <Header as=\"h2\" inverted style={{marginTop:\"1em\", marginBottom:\"1em\"}} color=\"purple\">Trending</Header>\n\n          </Container>\n        <Grid doubling columns={4} container>\n        \n        {data.map(show =>(\n          <Grid.Column key={show.show.ids.trakt} >\n          <Show key={show.show.ids.trakt} title={show.show.title} tvdbid={show.show.ids.tvdb} traktid={show.show.ids.trakt} year={show.show.year}/>\n          </Grid.Column>\n        ))}\n        </Grid>\n        </div>\n      )\n};\n\n\n\n\n\nexport default Top;","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport Show from '../../Show/Show';\nimport {Placeholder, Card} from 'semantic-ui-react';\n\n\nconst Fav = (props) => {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        Axios.get('https://mytvlistbackend.herokuapp.com/showsummary/' + props.ids)\n        .then(function (response) {\n          console.log(response.data)\n          setData(response.data);\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n        }, [props.ids]);\n        if (data.length === 0) {\n            return ( \n              <Card>\n                <Placeholder inverted size=\"medium\">\n                  <Placeholder.Image />\n                </Placeholder>\n              </Card>\n            )\n          }\n          return (\n            <div>\n                <Show key={data.ids.trakt} title={data.title} tvdbid={data.ids.tvdb} traktid={data.ids.trakt} year={data.year}/>\n            </div>\n          )\n}\n\nexport default Fav","import React, {useEffect, useState} from 'react';\nimport Fav from './Fav/Fav';\nimport {Grid, Container, Header} from 'semantic-ui-react'\nimport { Redirect } from 'react-router-dom';\n\nconst Home = () => {\n\n    const [data, setData] = useState([]);\n\n    useEffect (() => {\n        var fav = JSON.parse(localStorage.getItem(\"myfav\"));\n        \n        setData(fav);\n        \n    }, []);   \n    \n    if (JSON.parse(localStorage.getItem(\"myfav\")).length === 0){\n        \n        return (\n            <Redirect to=\"/trending\"/>\n        )\n    }\n    \n        return (\n            <div>\n                <Container>\n                <Header as=\"h2\" inverted color=\"purple\" style={{marginTop:\"1em\", marginBottom:\"1em\"}}>Your TVList</Header>\n            </Container>\n                <Grid doubling columns={4} container>\n            \n                    {data.map(ids =>(\n                    <Grid.Column>\n                        <Fav key={ids} ids={ids} />\n                    </Grid.Column>\n                    ))}\n                </Grid>\n            </div>\n    \n        )\n    \n    }\nexport default Home;","import React, { useState } from 'react'\nimport { Button} from 'semantic-ui-react'\nexport const arrayRemove =(array, value)=> {\n    for(let i=0; i<array.length; ++i) {\n        if(array[i] === value) {\n            let copy = [...array];\n            copy.splice(i, 1);\n            return copy;\n        }\n    }\n    return array;\n}\nconst Added = (props) => {\n    const [includes, setincludes] = useState();\n    function check () {\n        if (JSON.parse(localStorage.getItem(\"myfav\")).includes(props.id) === true){\n            console.log(JSON.parse(localStorage.getItem(\"myfav\")));\n            setincludes(true);\n            console.log(\"true called\");\n        }\n        else {\n            setincludes(false);\n            console.log(JSON.parse(localStorage.getItem(\"myfav\")));\n            console.log(\"false called\");\n        }\n    }\n    \n    function addtofav () {\n        try{\n            var myfav = localStorage.getItem(\"myfav\");\n            var storedFav  = JSON.parse(myfav);\n            storedFav.push(props.id);\n            localStorage.setItem(\"myfav\", JSON.stringify(storedFav));\n            console.log(localStorage.getItem(\"myfav\"))\n            check();\n          }\n          catch {\n            console.log(\"error updating\")\n          }\n    }\n\n    function removefromfav () {\n        var myfav = localStorage.getItem(\"myfav\");\n      var storedFav  = JSON.parse(myfav);\n      storedFav = arrayRemove(storedFav, props.id);\n      localStorage.setItem(\"myfav\", JSON.stringify(storedFav));\n      check();\n    }\n    if (includes === true || JSON.parse(localStorage.getItem(\"myfav\")).includes(props.id) === true ){\n        return (\n            <Button inverted color=\"red\" onClick={removefromfav}>\n                Remove from the List\n            </Button>\n\n        )\n    }\n    else {\n        return (\n            <Button inverted color=\"yellow\" onClick={addtofav}>\n                Add to the List\n            </Button>\n            \n        )\n    }\n    \n}\n\nexport default Added;","import React, {useState} from 'react';\nimport {  Button } from 'semantic-ui-react';\n\nconst Watched = (props) => {\n    const [includes, setincludes] = useState();\n    function check () {\n        if (JSON.parse(localStorage.getItem(\"episodes\")).includes(props.epid) === true){\n            console.log(JSON.parse(localStorage.getItem(\"episodes\")));\n            setincludes(true);\n            console.log(\"true called\");\n        }\n        else {\n            setincludes(false);\n            console.log(JSON.parse(localStorage.getItem(\"episodes\")));\n            console.log(\"false called\");\n        }\n    }\n    function arrayRemove(array, value) {\n        for(let i=0; i<array.length; ++i) {\n            if(array[i] === value) {\n                let copy = [...array];\n                copy.splice(i, 1);\n                return copy;\n            }\n        }\n        return array;\n    }\n    function addtowatched () {\n        try{\n            var myfav = localStorage.getItem(\"episodes\");\n            var storedFav  = JSON.parse(myfav);\n            storedFav.push(props.epid);\n            localStorage.setItem(\"episodes\", JSON.stringify(storedFav));\n            console.log(localStorage.getItem(\"episodes\"))\n            check();\n          }\n          catch {\n            console.log(\"error updating\")\n          }\n    }\n\n    function removefromwatched () {\n        var myfav = localStorage.getItem(\"episodes\");\n      var storedFav  = JSON.parse(myfav);\n      storedFav = arrayRemove(storedFav, props.epid);\n      localStorage.setItem(\"episodes\", JSON.stringify(storedFav));\n      check();\n    }\n    if (includes === true || JSON.parse(localStorage.getItem(\"episodes\")).includes(props.epid) === true ){\n        return (\n                        <Button inverted size=\"tiny\" floated=\"left\" color=\"green\" icon=\"eye\" circular fitted onClick={removefromwatched}>\n\n                        </Button>\n                      \n\n        )\n    }\n    else {\n        return (\n            <Button inverted size=\"tiny\" floated=\"left\" icon=\"eye\" circular fitted onClick={addtowatched}>\n\n            </Button>\n                \n         \n        )\n    }\n}\n\nexport default Watched;","import React from 'react';\nimport { List, Header, Button } from 'semantic-ui-react';\nimport Watched from './Watched/Watched';\nimport {Link} from 'react-router-dom';\nconst Episode = (props) => {\n    return (\n        <List divided verticalAlign='middle'>\n            {props.data.episodes.map(episode =>(\n                <List.Item>\n                <Watched epid={episode.ids.trakt}/>\n                <Link to={\"/episodes/\" + props.id + \"/season/\" + props.season + '/episode/' + episode.number}>\n\n                <Button inverted icon=\"plus\" color=\"yellow\" floated=\"left\"></Button>\n                </Link>\n\n                <List.Content>\n                  <Header as='h6' inverted color=\"grey\">S{props.season}E{episode.number}: {episode.title}</Header>\n                  \n                </List.Content>\n              </List.Item>\n                \n            ))}\n        </List>\n    )\n}\n\nexport default Episode;","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport './Info.css';\nimport Added from './Added/Added';\n// import Cast from './Cast/Cast';\nimport {Header, Container, Image, Flag, Embed, Button, Comment} from 'semantic-ui-react'\nimport Episode from '../../Episode/Episode';\nimport {Accordion, Card} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nexport const youtube_parser = (url) =>{\n  if (url === null){\n    return;\n  }\n  var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n  var match = url.match(regExp);\n  return (match&&match[7].length===11)? match[7] : false;\n}\n\nexport const networkstatus = (network, status) => {\n  return network + \" (\" + status + \")\";\n}\nconst Info = (props) => {\n    const [image, setImage] = useState([]);\n    useEffect(() => {\n        var address = \"https://mytvlistbackend.herokuapp.com/seriesbanner/\" + props.data.ids.tvdb;  \n        Axios.get(address)\n        .then(function (response) {\n            setImage (response.data);\n            \n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n\n        \n\n      }, [props.data.ids.tvdb]);\n    return (\n        <div>\n            \n              <div className=\"imagediv\">\n              \n              <Image  src={image} width=\"100%\" className=\"image\" fluid bordered/>\n              </div>\n            <Container>\n              <Header as='h1' color=\"yellow\">{props.data.title + \" (\" + props.data.year  + \")\"}</Header>\n              <Added id={props.data.ids.trakt}/>\n\n    <Header as='h3' color=\"red\">{networkstatus(props.data.network, props.data.status)}</Header>\n              <Header as='h6' color=\"grey\">{props.data.overview}</Header>\n              <Button inverted href={props.data.homepage} color=\"blue\">Visit Homepage</Button>\n              <Header as='h6' inverted>Certification: {props.data.certification} <br /> Country: {props.data.country.toUpperCase()} <Flag name={props.data.country} /> <br /> Language: {props.data.language.toUpperCase()}</Header>\n              {props.data.genres.map((gen) =>(\n                  <Link to={\"/list/\" + gen}>\n                    <Button style={{marginRight:\"1em\"}} inverted color=\"purple\" size=\"small\">{gen.charAt(0).toUpperCase() + gen.slice(1)}</Button>\n                  </Link>\n    \n              ))}\n              <Header as='h2' color=\"yellow\">Trailer:</Header>\n              <Embed\n            id={youtube_parser(props.data.trailer)}\n            placeholder='https://www.xda-developers.com/files/2018/03/youtube-dark-1024x672.png'\n            source='youtube'\n  />\n              {/* <Header as='h2' color=\"yellow\">Cast</Header>\n              <Cast cast={props.cast}/> */}\n              <Header as='h2' color=\"yellow\">Episodes:</Header>\n              <Accordion style={{backgroundColor:\"black\", border:\"none\"}}>\n              <Card>\n              {props.episode.map((season, index) =>(\n                <div>\n                  \n\n                    <Accordion.Toggle style={{backgroundColor:\"#202020\", border:\"none\"}} as={Card.Header} eventKey={index+1} >                                \n                    Season:  {season.number}\n                       </Accordion.Toggle>\n                      <Accordion.Collapse style={{backgroundColor:\"#202020\", color:\"white\"}} eventKey={index+1}>\n      <Card.Body><Episode id={props.traktid} season={season.number} data={season} /></Card.Body>\n    </Accordion.Collapse>\n                  \n                  \n                </div>\n    \n              ))}\n              </Card>\n              </Accordion>\n              <Header as='h2' color=\"yellow\">Comments:</Header>\n\n              <Comment.Group threaded>\n              {props.comments.map((comment, index) =>(\n                <Comment>\n                  <Comment.Avatar src='https://react.semantic-ui.com/images/avatar/small/elliot.jpg' />\n                  <Comment.Content inverted>\n              <Comment.Author><Header as=\"h6\" inverted color=\"red\">{comment.user.username}</Header></Comment.Author>\n              <Comment.Text><Header as=\"h6\" inverted color=\"grey\">{comment.comment}</Header></Comment.Text>\n        <Comment.Actions>\n          \n        </Comment.Actions>\n      </Comment.Content>\n      </Comment>\n              ))\n\n\n              }\n          </Comment.Group>\n            </Container>\n        </div>\n    )\n}\n\nexport default Info;\n","import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Axios from 'axios';\nimport Info from './Info/Info';\nimport {Loader} from 'semantic-ui-react';\nconst ShowInfo = () => {\n    let location = useLocation();\n    var path = location.pathname.substring(location.pathname.lastIndexOf('/') + 1)\n    const [data, setData] = useState([]);\n    const [episode, setEpisode] = useState([]);\n    const [comments, setComments] = useState([]);\n    useEffect(() => {\n        Axios.get('https://mytvlistbackend.herokuapp.com/showinfo/' + path)\n        .then(function (response) {\n          setData(response.data);\n          console.log(response.data)\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n        var address = \"https://mytvlistbackend.herokuapp.com/episodelist/\" + path;  \n        Axios.get(address)\n        .then(function (response) {\n            setEpisode (response.data);\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n        address = \"https://mytvlistbackend.herokuapp.com/comments/\" + path;  \n        Axios.get(address)\n        .then(function (response) {\n            setComments (response.data);\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n\n    }, [path]);\n    if (data.length === 0){\n        return (\n            <div>\n                          <Loader active style={{marginTop:\"1em\"}} inline='centered' >Loading</Loader>\n\n            </div>\n        )\n    }\n    else {\n        return (\n            <div>\n                <Info data={data} traktid={path} episode={episode} comments={comments}/>\n            </div>\n        )\n    }\n    \n  \n}\n\n\n\nexport default ShowInfo;","import React from 'react';\nimport {Container, Form} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom';\nimport './Search.css';\n\nclass searchbar extends React.Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n        this.handleChange = this.handleChange.bind(this);\n      }\n      handleChange(event) {    this.setState({value: event.target.value});  }\n  render (){\n    return (\n      <div>\n\n\n        <Container style={{marginTop:\"1em\", marginBottom:\"1em\"}}>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Group widths=\"equal\">\n            <Form.Input\n              inverted fluid type='text' value={this.state.value} onChange={this.handleChange}  placeholder='Search...' name=\"query\"\n            />\n            \n            <Link to={\"/search/\" + encodeURI(this.state.value)}><Form.Button inverted content='Search' /></Link>\n          </Form.Group>\n        </Form>\n      \n        </Container>\n\n\n            </div>\n    )\n  }\n    \n}\n\nexport default searchbar;","import React, {useState, useEffect} from 'react';\nimport Show from '../Show/Show';\nimport { useLocation } from 'react-router-dom';\nimport Axios from 'axios'\nimport {Container, Grid, Header, Loader} from 'semantic-ui-react'\nimport Search from '../Search/Search'\nconst Result = (props) => {\n    const [data,setData] = useState([]);\n    let location = useLocation();\n    var path = location.pathname.substring(location.pathname.lastIndexOf('/') + 1)\n\n    useEffect (() => {\n        Axios.get('https://mytvlistbackend.herokuapp.com/search/' + path)\n        .then(function (response) {\n          setData(response.data);\n          console.log(response.data);\n\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n\n    }, [path])\n   if (data.length === 0){\n        return (\n            <div>\n              <Search></Search>\n<Loader active inline='centered' >Loading</Loader>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div>\n        <Search></Search>\n        <Container>\n        <Header as=\"h2\" inverted color=\"purple\" style={{marginTop:\"1em\", marginBottom:\"1em\"}}>Search Results for: {path}</Header>\n        </Container>\n        <Grid doubling columns={4} container>\n\n        {data.map(show =>(\n          <Grid.Column key={show.show.ids.trakt} >\n          <Show key={show.show.ids.trakt} title={show.show.title} tvdbid={show.show.ids.tvdb} traktid={show.show.ids.trakt} year={show.show.year}/>\n          </Grid.Column>\n        ))}\n        </Grid>\n        </div>\n        )\n    }\n}\n\nexport default Result;","import React, {useState, useEffect} from 'react'\nimport Show from '../Show/Show';\nimport Axios from 'axios';\nimport {Grid, Loader, Container, Header} from 'semantic-ui-react'\nconst Popular = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n      Axios.get('https://mytvlistbackend.herokuapp.com/popular')\n      .then(function (response) {\n        console.log(response.data)\n        setData(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n      }, []);\n  \n      if (data.length === 0) {\n        return (\n          <Container>\n          <Header as=\"h2\" inverted style={{marginTop:\"1em\", marginBottom:\"1em\"}} color=\"purple\">Popular This Week</Header>\n          <Loader active inline='centered' >Loading</Loader>\n\n          </Container>\n          \n          );\n      }\n      return (\n        <div>\n        <Container>\n          <Header as=\"h2\" inverted style={{marginTop:\"1em\", marginBottom:\"1em\"}} color=\"purple\">Popular This Week</Header>\n\n          </Container>\n        <Grid doubling columns={4} container>\n\n        {data.map(show =>(\n          <Grid.Column key={show.ids.trakt} >\n          <Show key={show.ids.trakt} title={show.title} tvdbid={show.ids.tvdb} traktid={show.ids.trakt} year={show.year}/>\n          </Grid.Column>\n        ))}\n        </Grid>\n        </div>\n      )\n};\n\n\n\n\n\nexport default Popular;","import React, {useState, useEffect} from 'react'\nimport Show from '../Show/Show';\nimport Axios from 'axios';\nimport {Grid, Loader, Container, Header} from 'semantic-ui-react'\nconst Top = () => {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n      Axios.get('https://mytvlistbackend.herokuapp.com/anticipated')\n      .then(function (response) {\n        console.log(response.data)\n        setData(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n      }, []);\n  \n      if (data.length === 0) {\n        return (\n          <Container>\n          <Header as=\"h2\" inverted style={{marginTop:\"1em\", marginBottom:\"1em\"}} color=\"purple\">Most Anticipated</Header>\n          <Loader active inline='centered' >Loading</Loader>\n          </Container>\n          \n          );\n      }\n      return (\n        <div>\n        <Container>\n          <Header as=\"h2\" inverted style={{marginTop:\"1em\", marginBottom:\"1em\"}} color=\"purple\">Most Anticipated</Header>\n\n          </Container>\n        <Grid doubling columns={4} container>\n\n        {data.map(show =>(\n          <Grid.Column key={show.show.ids.trakt} >\n          <Show key={show.show.ids.trakt} title={show.show.title} tvdbid={show.show.ids.tvdb} traktid={show.show.ids.trakt} year={show.show.year}/>\n          </Grid.Column>\n        ))}\n        </Grid>\n        </div>\n      )\n};\n\n\n\n\n\nexport default Top;","import React, {useState, useEffect} from 'react'\nimport Axios from 'axios';\nimport {Grid, Loader, Button, Container, Header} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom';\n\nconst Popular = () => {\n    const [data, setData] = useState([]);\n    useEffect(() => {\n      Axios.get('https://mytvlistbackend.herokuapp.com/list')\n      .then(function (response) {\n        console.log(response.data)\n        setData(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n      }, []);\n  \n      if (data.length === 0) {\n        return (\n          <Container>\n          <Header as=\"h2\" inverted style={{marginTop:\"1em\", marginBottom:\"1em\"}} color=\"purple\">Genres</Header>\n          <Loader active inline='centered' >Loading</Loader>\n          </Container>\n          );\n      }\n      return (\n        <div>\n        <Container>\n          <Header as=\"h2\" inverted style={{marginTop:\"1em\", marginBottom:\"1em\"}} color=\"purple\">Genres</Header>\n          </Container>\n        <Grid doubling columns={5} container style={{marginBottom:\"1em\"}}>\n\n        {data.map(genre =>(\n          <Grid.Column key={genre.slug} >\n            <Link to={\"/list/\" + genre.slug}>\n            <Button inverted color='purple'>{genre.name}</Button>\n            </Link>\n          </Grid.Column>\n        ))}\n        </Grid>\n        </div>\n      )\n};\n\n\n\n\n\nexport default Popular;","import React, {useState, useEffect} from 'react'\nimport Show from '../Show/Show';\nimport Axios from 'axios';\nimport {Container, Grid, Header, Loader} from 'semantic-ui-react'\nimport { useLocation } from 'react-router-dom';\n\nconst Genre = () => {\n    const [data, setData] = useState([]);\n    let location = useLocation();\n    var path = location.pathname.substring(location.pathname.lastIndexOf('/') + 1);\n    useEffect(() => {\n        Axios.get('https://mytvlistbackend.herokuapp.com/genres/' + path)\n        .then(function (response) {\n          setData(response.data);\n          console.log(response.data)\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n    }, [path]);\n\n  \n      if (data.length === 0) {\n        return (\n          <Container>\n                      <Loader active inline='centered' >Loading</Loader>\n\n          </Container>\n       \n          \n          );\n      }\n      return (\n        <div>\n          <Container>\n          <Header as=\"h2\" inverted color=\"purple\" style={{textTransform:\"capitalize\", marginTop:\"1em\", marginBottom:\"1em\"}}>{path}</Header>\n\n          </Container>\n        <Grid doubling columns={4} container>\n\n        {data.map(show =>(\n          <Grid.Column key={show.show.ids.trakt} >\n          <Show key={show.show.ids.trakt} title={show.show.title} tvdbid={show.show.ids.tvdb} traktid={show.show.ids.trakt} year={show.show.year}/>\n          </Grid.Column>\n        ))}\n        </Grid>\n        </div>\n      )\n};\n\n\n\n\n\nexport default Genre;","import React from 'react'\nimport { Button, Header, Icon, Modal, Container } from 'semantic-ui-react'\nimport './Remove.css';\nfunction ModalExampleBasic() {\n  const [open, setOpen] = React.useState(false)\n  function emptylocal () {\n    setOpen(false);\n    localStorage.removeItem (\"myfav\");\n    localStorage.removeItem (\"episodes\");\n    localStorage.setItem(\"myfav\", \"[]\");\n    localStorage.setItem(\"episodes\", \"[]\");\n}\n  return (\n    <Container>\n       <Modal className=\"modal\"\n      basic\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      centered={true}\n      size='small'\n      trigger={<Button inverted color=\"red\">Delete all user data</Button>}\n    >\n      <Header icon>\n        <Icon name='archive' />\n        Remove all user data\n      </Header>\n      <Modal.Content>\n        <p>\n          Are You sure that you want to remove all user data.\n        </p>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button basic color='red' inverted onClick={() => setOpen(false)}>\n          <Icon name='remove' /> No\n        </Button>\n        <Button color='green' inverted onClick={() => emptylocal(false)}>\n          <Icon name='checkmark' /> Yes\n        </Button>\n      </Modal.Actions>\n    </Modal>\n    </Container>\n   \n\n\n  )\n}\n\nexport default ModalExampleBasic","import React from 'react'\nimport { saveAs } from 'file-saver';\nimport {\n  Button,\n  Divider,\n  Grid,\n  Header,\n  Icon,\n  Segment,\n  Container,\n} from 'semantic-ui-react'\nimport Remove from './RemoveData/Remove';\nimport ReactFileReader from 'react-file-reader';\nfunction settings() {\n  const createBackup = () => {\n    var fav = JSON.parse(localStorage.getItem(\"myfav\"));\n    var episodes = JSON.parse(localStorage.getItem(\"episodes\"));\n    console.log(fav);\n    console.log(episodes);\n    var exportdata = {favourites: fav, watchlist: episodes};\n    console.log(exportdata);\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    today = mm + '-' + dd + '-' + yyyy;\n    var fileName = 'MyTVList-Backup-' + today + '.json';\n    var fileToSave = new Blob([JSON.stringify(exportdata)], {\n      type: 'application/json',\n      name: fileName\n    });\n    saveAs(fileToSave, fileName);\n\n  }\n\n  const handle = files => {\n    var data = files.base64.split(',');\n    console.log(data[1]);\n    var codata =  atob(data[1]);\n    var parsed =  JSON.parse(codata);\n    console.log(parsed.favourites);\n    localStorage.setItem(\"myfav\", JSON.stringify(parsed.favourites));\n    localStorage.setItem(\"episodes\", JSON.stringify(parsed.watchlist));\n\n  }\n\n    return (\n        <Container style= {{marginTop:\"1em\"}}>\n                <Header as=\"h2\" inverted color=\"purple\">Settings</Header>\n\n        <Header as=\"h3\" inverted color=\"yellow\" style={{marginBottom:\"1em\"}}>Export & Import Data</Header>\n        <Segment placeholder inverted>\n    <Grid columns={2} stackable textAlign='center'>\n      <Divider vertical inverted>Or</Divider>\n \n      <Grid.Row verticalAlign='middle'>\n        <Grid.Column>\n          <Header icon inverted>\n            <Icon name='download' />\n            Export Data\n          </Header>\n          <Button primary onClick={() => createBackup()}>Export</Button>\n\n        </Grid.Column>\n\n        <Grid.Column>\n          <Header icon inverted>\n            <Icon name='upload' inverted />\n          \n            Import Data\n          </Header>\n          <ReactFileReader fileTypes={[\".json\"]} base64={true} handleFiles={ handle}>\n          <Button primary>Import</Button>\n          </ReactFileReader>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  </Segment>\n  <Header as=\"h3\" inverted color=\"yellow\" style={{marginBottom:\"1em\"}}>Delete User Data</Header>\n        <Segment placeholder inverted>\n        <Remove />\n        </Segment>\n    </Container>\n    )\n    \n  \n    }\nexport default settings","import React from 'react';\nimport { Container } from 'semantic-ui-react';\n\n\nconst Landing = () => {\n    return (\n        <Container>\n            This is muf landing\n        </Container>\n    )\n}\n\nexport default Landing;","import React, { useState } from 'react'\nimport {Button} from 'semantic-ui-react'\n\nconst WatchedEp = (props) => {\n    const [includes, setincludes] = useState();\n    function check () {\n        if (JSON.parse(localStorage.getItem(\"episodes\")).includes(props.id) === true){\n            console.log(JSON.parse(localStorage.getItem(\"episodes\")));\n            setincludes(true);\n            console.log(\"true called\");\n        }\n        else {\n            setincludes(false);\n            console.log(JSON.parse(localStorage.getItem(\"episodes\")));\n            console.log(\"false called\");\n        }\n    }\n    function arrayRemove(array, value) {\n        for(let i=0; i<array.length; ++i) {\n            if(array[i] === value) {\n                let copy = [...array];\n                copy.splice(i, 1);\n                return copy;\n            }\n        }\n        return array;\n    }\n    function addtofav () {\n        try{\n            var myfav = localStorage.getItem(\"episodes\");\n            var storedFav  = JSON.parse(myfav);\n            storedFav.push(props.id);\n            localStorage.setItem(\"episodes\", JSON.stringify(storedFav));\n            console.log(localStorage.getItem(\"episodes\"))\n            check();\n          }\n          catch {\n            console.log(\"error updating\")\n          }\n    }\n\n    function removefromfav () {\n        var myfav = localStorage.getItem(\"episodes\");\n      var storedFav  = JSON.parse(myfav);\n      storedFav = arrayRemove(storedFav, props.id);\n      localStorage.setItem(\"episodes\", JSON.stringify(storedFav));\n      check();\n    }\n    if (includes === true || JSON.parse(localStorage.getItem(\"episodes\")).includes(props.id) === true ){\n        return (\n            <Button inverted color=\"red\" onClick={removefromfav}>\n                Remove from Watched\n            </Button>\n\n        )\n    }\n    else {\n        return (\n            <Button inverted color=\"yellow\" onClick={addtofav}>\n                Mark as Watched\n            </Button>\n            \n        )\n    }\n    \n}\n\nexport default WatchedEp;","import React, {useEffect, useState} from 'react';\nimport {  Loader, Container, Header, Statistic } from 'semantic-ui-react';\nimport Axios from 'axios';\nimport Watched from './WatchedButton/Watched';\nconst EpisodeInfo = (props) => {\n    var path = window.location.href;\n    var parray = path.split('/');\n    var episode = parray[parray.length -1];\n    var season = parray[parray.length -3];\n    var id = parray[parray.length -5];\n    const [data, setData] = useState([]);\n    useEffect(() => {\n        Axios.get('https://mytvlistbackend.herokuapp.com/episode/' + id + '/' + season + '/' + episode)\n        .then(function (response) {\n          setData(response.data);\n          console.log(response.data)\n        })\n        .catch(function (error) {\n          // handle error\n          console.log(error);\n        })\n        .finally(function () {\n          // always executed\n        });\n        \n      \n    }, [id, season, episode]);\n\n    if (data.length === 0) {\n        return (\n          <Container>\n                      <Loader active inline='centered' >Loading</Loader>\n\n          </Container>\n       \n          \n          );\n      }\n      return (\n        <Container>\n      <Header as=\"h1\" style={{marginTop:\"1em\"}} color=\"yellow\">S{data.season}E{data.number}: {data.title}</Header>\n      <header as=\"h5\" color=\"grey\">\n        {data.overview}\n      </header>\n        <br />\n      <Watched id={data.ids.trakt}></Watched>\n      <br /><br />\n      <Container>\n      <Statistic inverted>\n      <Statistic.Value>{data.rating}</Statistic.Value>\n    <Statistic.Label>Rating</Statistic.Label>\n  </Statistic>\n  <Statistic inverted>\n      <Statistic.Value>{data.votes}</Statistic.Value>\n    <Statistic.Label>Votes</Statistic.Label>\n  </Statistic>\n  <Statistic inverted>\n      <Statistic.Value>{data.runtime}</Statistic.Value>\n    <Statistic.Label>Runtime</Statistic.Label>\n  </Statistic>\n      </Container>\n      \n        </Container>\n        \n      )\n};\n\n\n\n\nexport default EpisodeInfo;","import React, {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport {Image} from 'semantic-ui-react';\n\nconst UpcomingImage = (props) => {\n    const [image, setImage] = useState([]);  \n    useEffect(() => {\n      var address = \"https://mytvlistbackend.herokuapp.com/seriesimage/\" + props.id;  \n      Axios.get(address)\n      .then(function (response) {\n          setImage (response.data);\n          console.log(response.data);\n          console.log(props.id)\n          \n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n      \n    }, [props.id]);\n    return (\n        <Image floated=\"left\" size=\"medium\" src={image} alt={props.title}/>\n          )\n  \n    }\n\n\nexport default UpcomingImage;","import React, {useState, useEffect} from 'react';\nimport {Item, Container, Header, Button} from 'semantic-ui-react';\nimport Axios from 'axios';\nimport UpcomingImage from './UpcomingImage';\nimport {Link} from 'react-router-dom';\nconst UpcomingEpisode = (props) => {\n    const [data, setData] = useState([]);  \n    const [datanext, setDataNext] = useState([]);  \n\n    useEffect(() => {\n      var address = \"https://mytvlistbackend.herokuapp.com/next/\" + props.id;  \n      Axios.get(address)\n      .then(function (response) {\n          setData (response.data);\n          \n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n\n      address = \"https://mytvlistbackend.herokuapp.com/showsummary/\" + props.id;  \n      Axios.get(address)\n      .then(function (response) {\n          setDataNext (response.data);\n          \n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n    }, [props.id]);\n    if (data.length === 0 || datanext.length === 0) {\n        return (\n          <span></span>\n          );\n        }\n\n    return (\n        <div>\n            <Item.Content>\n\n    <Header color=\"yellow\" inverted as='h2'>{datanext.title}: {data.title}</Header>\n    <Header as=\"h5\" inverted>{data.first_aired.split(\"T\")[0]}</Header>\n\n    <UpcomingImage id={datanext.ids.tvdb}></UpcomingImage>\n    <Container>\n    <Header color=\"purple\" inverted as='h5'> S{data.season}E{data.number}</Header>\n    <Header inverted as=\"h6\">{data.overview}</Header></Container>\n      <Container style={{marginTop:\"2rem\"}}>\n      <Link to={\"/show/\" + props.id}>\n\n    <Button inverted color=\"red\" floated=\"left\">More About this Show</Button>\n    </Link>\n    <Link to={\"/episodes/\" + props.id + \"/season/\" + data.season + \"/episode/\" + data.number}>\n    <Button inverted color=\"yellow\" floated=\"left\">More About this Episode</Button>\n    </Link>\n      </Container>\n    \n\n      </Item.Content>\n        </div>\n    )\n}\nexport default UpcomingEpisode;","import React, {useEffect, useState} from 'react';\nimport {Item, Container, Header} from 'semantic-ui-react'\nimport UpcomingEpisode from './UpcomingEpisode/UpcomingEpisode';\n\nconst Home = () => {\n    const [data, setData] = useState([]);\n\n    useEffect (() => {\n        var fav = JSON.parse(localStorage.getItem(\"myfav\"));\n        \n        setData(fav);\n        \n    }, []);   \n    \n    if (JSON.parse(localStorage.getItem(\"myfav\")).length === 0){\n        \n        return (\n            <Header>Looks like you don't have any upcoming episodes.</Header>\n        )\n    }\n    \n        return (\n            <div>\n                <Container>\n                <Header as=\"h2\" inverted color=\"purple\" style={{marginTop:\"1em\", marginBottom:\"1em\"}}>Upcoming</Header>\n            \n            <Item.Group>\n                    {data.map(ids =>(\n                        <Item>\n                            <UpcomingEpisode id={ids}/>\n                        </Item> \n                    \n                    ))}\n            </Item.Group>\n            </Container>\n            </div>\n    \n        )\n    \n    }\nexport default Home;","import React, {Fragment} from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Button } from 'semantic-ui-react';\nimport './Navigation.css';\nimport Top from '../Top/Top'\nimport Home from '../Home/Home';\nimport Info from '../ShowInfo/ShowInfo';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport ResultPage from '../Result/Result';\nimport Popular from '../Popular/Popular';\nimport Anticipated from '../Anticipated/Anticipated'\nimport List from '../List/List';\nimport Genre from '../Genre/Genre';\nimport Search from '../Search/Search';\nimport Settings from '../Settings/Settings';\nimport Landing from '../Landing/Landing';\nimport EpisodeInfo from '../Episode/EpisodeInfo/EpisodeInfo';\nimport Upcoming from '../Upcoming/Upcoming';\nexport default function App() {\n    return (\n    <Router>\n  <Navbar collapseOnSelect expand=\"lg\"  className=\"mynav\">\n  <Navbar.Brand><Link to=\"/\" className=\"links\"><Button inverted color=\"purple\" size=\"medium\">MyTVList</Button></Link></Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n\n    <Nav className=\"mr-auto\">\n      <Nav.Link><Link className=\"links\" to=\"/trending\"><Button basic inverted compact color=\"orange\">Trending</Button></Link></Nav.Link>\n      <Nav.Link><Link className=\"links\" to=\"/popular/\"><Button basic inverted compact color=\"orange\">Popular</Button></Link></Nav.Link>\n      <Nav.Link><Link className=\"links\" to=\"/anticipated/\"><Button basic inverted compact color=\"orange\">Anticipated</Button></Link></Nav.Link>\n      <Nav.Link><Link className=\"links\" to=\"/upcoming/\"><Button basic inverted compact color=\"orange\">Upcoming</Button></Link></Nav.Link>\n\n    </Nav>\n    <Nav>\n    <Nav.Link><Link className=\"links\" to=\"/list/\"><Button icon=\"tags\" circular inverted></Button></Link></Nav.Link>\n      <Nav.Link><Link className=\"links\" to=\"/search/\"><Button icon=\"search\" circular inverted></Button></Link></Nav.Link>\n      <Nav.Link><Link className=\"links\" to=\"/settings/\"><Button icon=\"cog\" circular inverted></Button></Link></Nav.Link>\n\n    </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n\n    \n        <Route path=\"/\" exact component={Fav} />\n        <Route path=\"/trending\" exact component={TopView} />\n        <Route path=\"/show/:id\" component={ShowInfo} />\n        <Route path=\"/search/\" exact component={SearchView}/>\n        <Route path=\"/popular/\" exact component={PopularView}/>\n        <Route path=\"/anticipated\" component={AntiView}/>\n        <Route path=\"/list\"  component={ListView}/>\n        <Route path=\"/list/:genres\" component={GenreView}/>\n        <Route path=\"/search/:query\" component={ResultPage}/>\n        <Route path=\"/settings\" exact component={SettingsPage}/>\n        <Route path=\"/relevant-home/\" component={RelevantHome}/>\n        <Route path=\"/episodes/:id/season/:season/episode/:episode\" component={EpisodePage}/>\n        <Route path=\"/upcoming\" exact component={UpcomingPage}/>\n        <Route component={NoMatchPage} />\n  </Router>\n    );\n  }\n\n\nconst Fav = () => (\n    <Fragment>\n      <Home />\n    </Fragment>\n    );\n\nconst TopView = () => (\n  <Fragment>\n    <Top />\n  </Fragment>\n)\n\n\nconst ShowInfo = () => (\n  <Fragment>\n    <Info />\n  </Fragment>\n)\n\n\nconst PopularView = () => (\n  <Fragment>\n    <Popular />\n  </Fragment>\n)\nconst AntiView = () => (\n  <Fragment>\n    <Anticipated />\n  </Fragment>\n)\nconst ListView = () => (\n  <Fragment>\n    <List /> \n  </Fragment>\n)\n\nconst GenreView = () => (\n  <Fragment>\n    <Genre />\n  </Fragment>\n)\n\nconst SearchView = () => (\n  <Fragment>\n    <Search />\n  </Fragment>\n)\n\n\nconst SettingsPage = () => (\n  <Fragment> \n    <Settings />\n  </Fragment>\n)\n\nconst RelevantHome = () => (\n  <Fragment>\n    <Landing />\n  </Fragment>\n)\n\n\nconst EpisodePage = () => (\n  <Fragment>\n    <EpisodeInfo />\n  </Fragment>\n)\n\n\nconst UpcomingPage = () => (\n  <Fragment>\n    <Upcoming/>\n  </Fragment>\n) \n\nconst NoMatchPage = () => (\n  <Fragment>\n    \n  </Fragment>\n)","import React from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation'; \nimport {BrowserRouter} from 'react-router-dom';\nfunction App() {\n  \n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <Navigation />\n    </div>\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nif (localStorage.getItem(\"myfav\") === null){\n  localStorage.setItem(\"myfav\", \"[]\");\n}\nif (localStorage.getItem(\"episodes\") === null){\n  localStorage.setItem(\"episodes\", \"[]\");\n}\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}